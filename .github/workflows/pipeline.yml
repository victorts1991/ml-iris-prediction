name: Api ML Iris Prediction (GCP)

on:
  push:
    branches: [ "main" ]

jobs:

  deploy-gke:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

    - name: Setup Python environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' 

    - name: Install Python dependencies for tests
      run: |
        pip install -r requirements.txt 
      env:
        PYTHONPATH: "."

    - name: Run Pytest
      run: pytest 
      env:
        PYTHONPATH: "."

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker gcr.io

    - name: Install kubectl
      run: |
        sudo apt-get update
        sudo apt-get install apt-transport-https ca-certificates gnupg curl
        sudo curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
        sudo echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get update && sudo apt-get install google-cloud-cli
        sudo apt-get install -y kubectl
        sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Build, tag, and push image to GCR
      run: |
        docker build -t api-ml-iris-prediction .
        docker tag api-ml-iris-prediction gcr.io/ml-iris-prediction/api-ml-iris-prediction:latest
        docker push gcr.io/ml-iris-prediction/api-ml-iris-prediction:latest

    - name: Terraform Init
      id: init
      run: |
        cd ./iac
        terraform init
    
    - name: Terraform Validate
      id: validate
      run: |
        cd ./iac
        terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      run: |
        cd ./iac
        terraform plan -no-color
      continue-on-error: true    

    - name: Terraform Apply
      id: apply
      run: |
        cd ./iac
        terraform apply -auto-approve
      continue-on-error: true
    
    - name: Get GKE Cluster Credentials
      run: |
        gcloud container clusters get-credentials cluster-ml-iris-prediction --region us-central1 --project ml-iris-prediction

    - name: Deploy API to GKE
      run: |
        cd ./iac/kubernetes-yamls
        kubectl apply -f deployment.yaml
        kubectl apply -f svc.yaml